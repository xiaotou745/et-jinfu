<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etaofinance.api.dao.inter.ICommentDao" >
  <resultMap id="BaseResultMap" type="com.etaofinance.entity.Comment" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="ProjectId" property="projectid" jdbcType="BIGINT" />
    <result column="MemberId" property="memberid" jdbcType="BIGINT" />
    <result column="Content" property="content" jdbcType="VARCHAR" />
    <result column="IsReply" property="isreply" jdbcType="TINYINT" />
    <result column="ReCommentId" property="recommentid" jdbcType="BIGINT" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="IsDel" property="isdel" jdbcType="TINYINT" />
    <result column="ReCommentMemberId" property="reCommentMemberId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, ProjectId, MemberId, Content, IsReply, ReCommentId, CreateTime, IsDel,reCommentMemberId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where Id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.etaofinance.entity.Comment" >
    insert into comment (ProjectId, MemberId, 
      Content, IsReply, ReCommentId)
    values (#{projectid,jdbcType=BIGINT}, #{memberid,jdbcType=BIGINT}, 
      #{content,jdbcType=VARCHAR}, #{isreply,jdbcType=TINYINT}, #{recommentid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.etaofinance.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="projectid != null" >
        ProjectId,
      </if>
      <if test="memberid != null" >
        MemberId,
      </if>
      <if test="content != null" >
        Content,
      </if>
      <if test="isreply != null" >
        IsReply,
      </if>
      <if test="recommentid != null" >
        ReCommentId,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="isdel != null" >
        IsDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isreply != null" >
        #{isreply,jdbcType=TINYINT},
      </if>
      <if test="recommentid != null" >
        #{recommentid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.etaofinance.entity.Comment" >
    update comment
    <set >
      <if test="projectid != null" >
        ProjectId = #{projectid,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        MemberId = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        Content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isreply != null" >
        IsReply = #{isreply,jdbcType=TINYINT},
      </if>
      <if test="recommentid != null" >
        ReCommentId = #{recommentid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null" >
        IsDel = #{isdel,jdbcType=TINYINT},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.etaofinance.entity.Comment" >
    update comment
    set ProjectId = #{projectid,jdbcType=BIGINT},
      MemberId = #{memberid,jdbcType=BIGINT},
      Content = #{content,jdbcType=VARCHAR},
      IsReply = #{isreply,jdbcType=TINYINT},
      ReCommentId = #{recommentid,jdbcType=BIGINT},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      IsDel = #{isdel,jdbcType=TINYINT}
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyAndMem" parameterType="com.etaofinance.entity.Comment" >
    update comment
    set  IsDel = #{isdel,jdbcType=TINYINT}
    where Id = #{id,jdbcType=BIGINT} And MemberId = #{memberid,jdbcType=BIGINT}
  </update>
  <select id="getCommentListPaging"
		resultType="com.etaofinance.entity.Comment"
		parameterType="com.etaofinance.entity.req.PagedCommentReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' a.createTime desc ',
		' a.Id,a.MemberId,a.Content,a.CreateTime ',
		' comment a ',
		' <include refid="queryCommentListPagingWhere" /> ',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
 </select>
 <sql id="queryCommentListPagingWhere">
		a.IsDel = 0
		<if test="projectid>0">
			and a.ProjectId=${projectid}
		</if>
		<if test="memberid>0">
			and a.MemberId=${memberid}
		</if>
		<if test="beginCreatetime != null and beginCreatetime !=''">
			and a.CreateTime>=''${beginCreatetime}''
		</if>
		<if test="endCreatetime != null and endCreatetime !=''">
			and ''${endCreatetime}''>a.createTime
		</if>
	</sql>
	<!-- 项目详情 ,评论 -->
	  <select id="getProjectComment"
		resultType="com.etaofinance.entity.domain.ProjectComment"
		parameterType="com.etaofinance.entity.req.PagedProjectCommentReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' c.Id desc ',
		' c.Id,
       c.MemberId,
       case when c.IsDel=1 THEN ''该评论已经被删除'' ELSE c.Content END  AS Content,
       c.IsReply,
       m1.HeadImage,
       c.ReCommentId,
       c.CreateTime,
       IFNULL(m1.UserName,'''') AS commontName,IFNULL(m2.UserName,'''') AS replayName ',
		' comment c
		  LEFT JOIN member m1 ON m1.Id=c.MemberId
          LEFT JOIN member m2 ON m2.Id=c.ReCommentMemberId  ',
		' c.ProjectId=${projectId} ',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
 </select>
</mapper>
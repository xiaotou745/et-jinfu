<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etaofinance.api.dao.inter.IMemberOtherDao">
  <resultMap id="BaseResultMap" type="com.etaofinance.entity.MemberOther" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="MemberId" property="memberid" jdbcType="BIGINT" />
    <result column="BalancePrice" property="balanceprice" jdbcType="DOUBLE" />
    <result column="AllowWithdrawPrice" property="allowwithdrawprice" jdbcType="DOUBLE" />
    <result column="HasWithdrawPrice" property="haswithdrawprice" jdbcType="DOUBLE" />
    <result column="PayPassWord" property="paypassword" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    Id, MemberId, BalancePrice, AllowWithdrawPrice, HasWithdrawPrice, PayPassWord
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from memberother
    where Id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 根据用户ID查询信息 -->
   <select id="selectByMemberId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from memberother
    where MemberId = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from memberother
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.etaofinance.entity.MemberOther" >
    insert into memberother (Id, MemberId, BalancePrice, 
      AllowWithdrawPrice, HasWithdrawPrice, PayPassWord
      )
    values (#{id,jdbcType=BIGINT}, #{memberid,jdbcType=BIGINT}, #{balanceprice,jdbcType=DOUBLE}, 
      #{allowwithdrawprice,jdbcType=DOUBLE}, #{haswithdrawprice,jdbcType=DOUBLE}, #{paypassword,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.etaofinance.entity.MemberOther" >
    insert into memberother
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="memberid != null" >
        MemberId,
      </if>
      <if test="balanceprice != null" >
        BalancePrice,
      </if>
      <if test="allowwithdrawprice != null" >
        AllowWithdrawPrice,
      </if>
      <if test="haswithdrawprice != null" >
        HasWithdrawPrice,
      </if>
      <if test="paypassword != null" >
        PayPassWord,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="balanceprice != null" >
        #{balanceprice,jdbcType=DOUBLE},
      </if>
      <if test="allowwithdrawprice != null" >
        #{allowwithdrawprice,jdbcType=DOUBLE},
      </if>
      <if test="haswithdrawprice != null" >
        #{haswithdrawprice,jdbcType=DOUBLE},
      </if>
      <if test="paypassword != null" >
        #{paypassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.etaofinance.entity.MemberOther" >
    update memberother
    <set >
      <if test="memberid != null" >
        MemberId = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="balanceprice != null" >
        BalancePrice = #{balanceprice,jdbcType=DOUBLE},
      </if>
      <if test="allowwithdrawprice != null" >
        AllowWithdrawPrice = #{allowwithdrawprice,jdbcType=DOUBLE},
      </if>
      <if test="haswithdrawprice != null" >
        HasWithdrawPrice = #{haswithdrawprice,jdbcType=DOUBLE},
      </if>
      <if test="paypassword != null" >
        PayPassWord = #{paypassword,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  
    <update id="updateByMemberIdSelective" parameterType="com.etaofinance.entity.MemberOther" >
    update memberother
    <set >
<!--       <if test="memberid != null" > -->
<!--         MemberId = #{memberid,jdbcType=BIGINT}, -->
<!--       </if> -->
      <if test="balanceprice != null" >
        BalancePrice = #{balanceprice,jdbcType=DOUBLE},
      </if>
      <if test="allowwithdrawprice != null" >
        AllowWithdrawPrice = #{allowwithdrawprice,jdbcType=DOUBLE},
      </if>
      <if test="haswithdrawprice != null" >
        HasWithdrawPrice = #{haswithdrawprice,jdbcType=DOUBLE},
      </if>
      <if test="paypassword != null" >
        PayPassWord = #{paypassword,jdbcType=VARCHAR},
      </if>
    </set>
    where MemberId = #{memberid,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.etaofinance.entity.MemberOther" >
    update memberother
    set MemberId = #{memberid,jdbcType=BIGINT},
      BalancePrice = #{balanceprice,jdbcType=DOUBLE},
      AllowWithdrawPrice = #{allowwithdrawprice,jdbcType=DOUBLE},
      HasWithdrawPrice = #{haswithdrawprice,jdbcType=DOUBLE},
      PayPassWord = #{paypassword,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=BIGINT}
  </update>
  
  
    <update id="updateMemberOther" parameterType="com.etaofinance.entity.MemberOther" >
    update memberother
    set 
    BalancePrice =BalancePrice +  #{allowwithdrawprice,jdbcType=DOUBLE} ,
    AllowWithdrawPrice =AllowWithdrawPrice+  #{allowwithdrawprice,jdbcType=DOUBLE}
    where MemberId = #{memberid,jdbcType=BIGINT}
  </update>
  
  
  
</mapper>
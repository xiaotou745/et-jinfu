<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.etaofinance.api.dao.inter.IProjectFavoriteDao"  >
  <resultMap id="BaseResultMap" type="com.etaofinance.entity.ProjectFavorite" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="MemberId" property="memberid" jdbcType="BIGINT" />
    <result column="ProjectId" property="projectid" jdbcType="BIGINT" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="IsDel" property="isdel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, MemberId, ProjectId, CreateTime, IsDel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from projectfavorite
    where Id = #{id,jdbcType=BIGINT}
  </select>
  
  
  <select id="getFavoriteCntByProId" resultType="java.lang.Integer"  parameterType="java.lang.Long" >
    select 
    count(1)
    from projectfavorite
    where ProjectId = #{proId,jdbcType=BIGINT}
  </select>
  <!-- 我关注的项目WAP -->
   <select id="getListMore" resultType="com.etaofinance.entity.domain.ProjectFavoriteDM"  parameterType="com.etaofinance.entity.req.ProFavoriteReq" >
 select 
 ps.Id, ps.MemberId, ps.ProjectId,  ps.CreateTime, ps.IsDel, 
p.ProjectName, p.projectStatus,p.PreheatTime as projectBeginDate,p.ProjectImage
    from projectfavorite ps
left join project  p on ps.ProjectId=p.Id
where ps.memberid = #{memberid,jdbcType=BIGINT} and ps.IsDel=0
	<if test="projectStatus>0">
		and	p.projectStatus=#{projectStatus,jdbcType=SMALLINT}
	</if>
	order by ps.CreateTime desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from projectfavorite
    where Id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.etaofinance.entity.ProjectFavorite" >
    insert into projectfavorite (Id, MemberId, ProjectId, 
      CreateTime, IsDel)
    values (#{id,jdbcType=BIGINT}, #{memberid,jdbcType=BIGINT}, #{projectid,jdbcType=BIGINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{isdel,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.etaofinance.entity.ProjectFavorite" useGeneratedKeys="true" keyProperty="Id">
    insert into projectfavorite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="memberid != null" >
        MemberId,
      </if>
      <if test="projectid != null" >
        ProjectId,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="isdel != null" >
        IsDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=BIGINT},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.etaofinance.entity.ProjectFavorite" >
    update projectfavorite
    <set >
      <if test="memberid != null" >
        MemberId = #{memberid,jdbcType=BIGINT},
      </if>
      <if test="projectid != null" >
        ProjectId = #{projectid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null" >
        IsDel = #{isdel,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.etaofinance.entity.ProjectFavorite" >
    update projectfavorite
    set MemberId = #{memberid,jdbcType=BIGINT},
      ProjectId = #{projectid,jdbcType=BIGINT},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      IsDel = #{isdel,jdbcType=INTEGER}
    where Id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getProjectFavList"
		resultType="com.etaofinance.entity.domain.ProjectFavoriteInvestModel"
		parameterType="com.etaofinance.entity.req.PagedProjectFavReq"
		statementType="CALLABLE">
		{call Sp_CustomPage2015_V1(
		' a.createTime desc ',
		' a.Id,a.createTime,a.MemberId,b.EMail,b.PhoneNo,b.UserName,b.TrueName,b.IdCard,
       (SELECT COUNT(DISTINCT ProjectId) from projectsubscription 
        where MemberId=a.MemberId AND ProjectId = a.ProjectId) ProjectCount ',
		' projectfavorite a LEFT join member b on a.MemberId=b.Id ',
		' <include refid="queryProjectFavListWhere" /> ',
		#{pageSize,mode=IN,jdbcType=INTEGER},
		#{currentPage,mode=IN,jdbcType=INTEGER},
		#{totalRecord,mode=OUT,jdbcType=INTEGER},
		#{totalPage,mode=OUT,jdbcType=INTEGER}
		)}
 </select>
 <sql id="queryProjectFavListWhere">
		a.IsDel = 0
		<if test="projectid>0">
			and a.ProjectId=${projectid}
		</if>
		<if test="memberid>0">
			and a.MemberId=${memberid}
		</if>
		<if test="truename != null and truename!=''">
			and b.TrueName=''${truename}''
		</if>
		<if test="phoneno != null and phoneno!=''">
			and b.PhoneNo=''${phoneno}''
		</if>
		<if test="email != null and email!=''">
			and b.EMail=''${email}''
		</if>
	</sql>
	<!-- 是否关注该项目 -->
	<select id="isMyFavorite" parameterType="java.util.Map" resultType="java.lang.Integer">
	SELECT COUNT(1) FROM projectfavorite p WHERE p.IsDel=0 AND p.MemberId=#{uid,jdbcType=BIGINT} AND p.ProjectId=#{pid,jdbcType=BIGINT}
	</select>
	<!-- 取消关注 -->
	<select id="cancelFavorite" parameterType="java.util.Map" >
	UPDATE projectfavorite p set p.IsDel=1  WHERE p.IsDel=0 AND p.MemberId=#{uid,jdbcType=BIGINT} AND p.ProjectId=#{pid,jdbcType=BIGINT}
	</select>
</mapper>